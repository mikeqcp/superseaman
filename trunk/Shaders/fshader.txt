#version 130

uniform vec4 ambient;
uniform vec4 diffuse;
uniform vec4 specular;

uniform sampler2D map_Ka;
uniform sampler2D map_Kd;
uniform sampler2D map_Ks;
uniform sampler2D map_N;

uniform int enableTexturingA;
uniform int enableTexturingD;
uniform int enableTexturingS;
uniform int enableTexturingN;

in vec4 inormal;
in vec2 iTexCoord;
in vec4 ilight;
in vec4 iv;

out vec4 pixelColor;

void main(void) {

	vec4 n ;

	if(enableTexturingN == 1){
		vec4 encodedN = texture(map_N, iTexCoord);
		n = vec4(2*encodedN.xyz - 1, 1);
		}
	else
		n = normalize(inormal);

	vec4 l = normalize(ilight);
	vec4 v = normalize(iv);
	vec4 r = normalize(reflect(-l, n));
		
	float nl = max(dot(n, l), 0);
	float rv = pow(max(dot(r, v), 0), 12);

	vec4 ambientColor, diffuseColor, specularColor;

	if(enableTexturingD == 1){

		vec4 texColor = texture(map_Kd, iTexCoord);
		diffuseColor = texColor*diffuse;

	} else diffuseColor = diffuse;

	if(enableTexturingA == 1){

		vec4 texColor = texture(map_Ka, iTexCoord);
		ambientColor = texColor*ambient;

	} else ambientColor = ambient;

	if(enableTexturingS == 1){

		vec4 texColor = texture(map_Ks, iTexCoord);
		specularColor = texColor*specular;

	} else specularColor = specular;

	pixelColor = ambientColor + diffuseColor*nl + specularColor*rv;

}
