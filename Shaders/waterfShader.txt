#version 130

uniform sampler2D textureMap0;
uniform sampler2D textureMap1;
uniform sampler2D textureMap2;
uniform sampler2D textureMap3;
uniform sampler2D textureMap4;

uniform int enableTexturing;

in vec4 waterTex0;
in vec4 waterTex1;
in vec4 waterTex2;
in vec4 waterTex3;
in vec4 waterTex4;

//unit 0 = water_reflection

//unit 1 = water_refraction

//unit 2 = water_normalmap

//unit 3 = water_dudvmap

//unit 4 = water_depthmap

out vec4 pixelColor;

void main(void) {

	 const vec4 sca = vec4(0.005, 0.005, 0.005, 0.005);
     const vec4 sca2 = vec4(0.02, 0.02, 0.02, 0.02);
     const vec4 tscale = vec4(0.25, 0.25, 0.25, 0.25);
     const vec4 two = vec4(2.0, 2.0, 2.0, 1.0);
     const vec4 mone = vec4(-1.0, -1.0, -1.0, 1.0);
	 const vec4 ofive = vec4(0.5,0.5,0.5,1.0);
	 const float exponent = 64.0;

	 vec4 lightTS = normalize(waterTex0);
	 vec4 viewt = normalize(waterTex4);
	 vec4 disdis = texture2D(textureMap3, vec2(waterTex2 * tscale));
	 vec4 dist = texture2D(textureMap3, vec2(waterTex1 + disdis*sca2));
	 vec4 fdist = dist;
	 fdist = fdist * two + mone; 
	 fdist = normalize(fdist);
	 fdist *= sca;

	 vec4 nmap = texture2D(textureMap2, vec2(waterTex1 + disdis*sca2));
	 nmap = (nmap-ofive) * two;
	 vec4 vNorm = nmap;
	 vNorm = normalize(nmap);

	 vec4 tmp = vec4(1.0 / waterTex3.w);
	 vec4 temp = tmp;

	 vec4 projCoord = waterTex3 * tmp;
	 projCoord += vec4(1.0);
	 projCoord *= vec4(0.5);
	 tmp = projCoord + fdist;
	 tmp = clamp(tmp, 0.001, 0.999);

	 vec4 refTex = texture2D(textureMap0, vec2(tmp));
	 vec4 refl = refTex;
	 vec4 refr = texture2D(textureMap1, vec2(tmp));
	 vec4 wdepth = texture2D(textureMap4, vec2(tmp));

	 wdepth = vec4(pow(wdepth.x, 4.0));
	 vec4 invdepth = 1.0 - wdepth;

	 vec4 vRef = normalize(reflect(-lightTS, vNorm));
	 float stemp = max(0.0, dot(viewt, vRef));
	 stemp = pow(stemp, exponent); 
	 vec4 specular = vec4(stemp);

	 vec4 invfres = vec4( dot(vNorm, viewt) );
	 vec4 fres = vec4(1.0) -invfres ;

	 refr *= invfres;
	 refr *= invdepth;

	 //temp = vec4(0.588, 0.486, 0.49, 1) * wdepth * invfres;
	 temp = vec4(0.8, 0.8, 0.8, 1) * wdepth * invfres;
	 refr += temp;
	 refl *= fres;

	 tmp = refr + refl;

	pixelColor = tmp + specular;

}
